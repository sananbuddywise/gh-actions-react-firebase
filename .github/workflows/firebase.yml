name: Firebase CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  dev:
    name: Development
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn
      - name: yarn install, build, and test
        run: |
          yarn install
          yarn build
      - name: Archive Build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  testing:
    name: Testing
    needs: dev
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Only run on pull requests

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Run Tests
        run: |
          # Add commands for running tests

  production:
    name: Production
    needs: testing
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # Only run on pull requests

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

# Define the workflow-level "pull_request" event and specify jobs for manual approval
# on the "testing" and "production" stages
workflows:
  pull_request_workflow:
    jobs:
      - testing:
          if: github.event.pull_request.labels[0].name == 'test'
      - production:
          if: github.event.pull_request.labels[0].name == 'deploy'